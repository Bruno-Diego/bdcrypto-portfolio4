#1.:Copy env.py file:.

#2.:Install environment dependencies:.
$ pip3 install -r requirements.txt

#3.:Start the server:.
$ python3 manage.py runserver    <#######

.:START:.

for the project start with full template


$ pip3 install 'django<4' gunicorn
$ pip3 install dj_database_url psycopg2
$ pip3 install dj3-cloudinary-storage #only needed for image storage
$ pip3 freeze --local > requirements.txt
$ django-admin startproject dbcrypto . --> dbcrypto is the name of the project
$ python3 manage.py startapp home --> go to dbcrypto\settings.py and add 'home' to installed_apps
migrate the changes to database with --> python3 manage.py migrate
$ python3 manage.py runserver   

.:Heroku:.
Create heroku app
in resources, search for Heroku Postgress and add a free one
go to settings and reveal vars, copy the posgress url and paste on env.py file (saved on local folder)

add to settings.py file:

import os
import dj_database_url
if os.path.isfile('env.py'):
    import env

SECRET_KEY = os.environ.get('SECRET_KEY')

and comment-out DATABASES = {...} but add:
DATABASES = {
    'default': dj_database_url.parse(os.environ.get('DATABASE_URL'))
}

run migrations again --> python3 manage.py migrate

.:Creating models:.

create models on the models.py file
paste --> from django.contrib.auth.models import User

everytime a model is created or edited, need to run migrations again:
$ python3 manage.py makemigrations --dry-run
$ python3 manage.py makemigrations 
$ python3 manage.py migrate

.:Creating a USER/ADMIN:.

$ python3 manage.py createsuperuser

Username: bdcrypto
Email address: bruno@bdcrypto.com
crypto2022

Username: bdcrypto
Email address: bruno@bdcrypto.com
crypto2022

.:Install environment dependencies:.
$ pip3 install -r requirements.txt


..:: WHITENOISE ::..

pip install whitenoise

.:Kill active servers:.

ps auxw | grep runserver
kill -9 PID

create a new table for the crypto prices
create a job to get the prices every minute or so

1. build crud for the assets
2. build the table for the crypto values
3. Build the job to update the table constantly

..:: FOR FINAL DEPLOYMENT::..

settings.py > DEBUG = False
settings.py > X_FRAME_OPTIONS = ‘SAMEORIGIN’
Heroku > Config Vars > Delete -> DISABLE_COLLECTSTATIC = 1
